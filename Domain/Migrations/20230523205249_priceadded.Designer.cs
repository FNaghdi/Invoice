// <auto-generated />
using System;
using Domain.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(PersonContext))]
    [Migration("20230523205249_priceadded")]
    partial class priceadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Model.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Domain.Model.PurchaseInvoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDPerson")
                        .HasColumnType("int");

                    b.Property<string>("Invoicenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDPerson");

                    b.ToTable("PurchaseInvoice", (string)null);
                });

            modelBuilder.Entity("Domain.Model.Purchaseinvoiceitems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idcommodity")
                        .HasColumnType("int");

                    b.Property<int?>("Idpruchaseinvoice")
                        .HasColumnType("int");

                    b.Property<int?>("Number")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("Number");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Idcommodity");

                    b.HasIndex("Idpruchaseinvoice");

                    b.ToTable("Purchaseinvoiceitems", (string)null);
                });

            modelBuilder.Entity("Domain.Model.PurchaseInvoice", b =>
                {
                    b.HasOne("Domain.Model.Person", "Person")
                        .WithMany("purchaseInvoice")
                        .HasForeignKey("IDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Domain.Model.Purchaseinvoiceitems", b =>
                {
                    b.HasOne("Domain.Model.Product", "Product")
                        .WithMany("Aghlamfaktors")
                        .HasForeignKey("Idcommodity");

                    b.HasOne("Domain.Model.PurchaseInvoice", "Purchaseinvoice")
                        .WithMany("purchaseinvoiceitems")
                        .HasForeignKey("Idpruchaseinvoice");

                    b.Navigation("Product");

                    b.Navigation("Purchaseinvoice");
                });

            modelBuilder.Entity("Domain.Model.Person", b =>
                {
                    b.Navigation("purchaseInvoice");
                });

            modelBuilder.Entity("Domain.Model.Product", b =>
                {
                    b.Navigation("Aghlamfaktors");
                });

            modelBuilder.Entity("Domain.Model.PurchaseInvoice", b =>
                {
                    b.Navigation("purchaseinvoiceitems");
                });
#pragma warning restore 612, 618
        }
    }
}
